function  [nseData,nseResults,...
	   numClasses,numDims,numObs,numTimeSteps,...
	   atkData] = attackingLearnPlusPlus_AdvLearn(dataset,... % General setting
                                                      kernel,... % Learn++.NSE & AttackSVM setting
                		                      maxSteps,stepSize,... % AttackSVM setting
                		                      degree,coef0,... % AttackSVM setting
                		                      numAtkPts,... % AttackSVM setting
                                                      timeStepsInPastToAttack,...
                                                      c) % AttackSVM setting
     [~,...
     nseData,nseResults,...
     numClasses,numDims,...
     numObs,numTimeSteps] = learnPlusPlus_NSE_Preprocessing(dataset,kernel);

    [atkSet,atkData] = Advlearn_Alone_Preprocessing(kernel,...
	                                            maxSteps,stepSize,....
	                                            degree,coef0,...
                                                    numAtkPts,...
                                                    numObs,numDims,numTimeSteps,...
                                                    timeStepsInPastToAttack,...
                                                    c);

    for iTStep = 1:numTimeSteps
        if ((iTStep - timeStepsInPastToAttack) <= 0) % Can't attack further back then we have information for
            if (iTStep == 1) % Learn++.NSE gets t = 1 nseResults.net 
            [nseResults(iTStep).net,...
             nseResults(iTStep).f_measure,...
             nseResults(iTStep).g_mean,...
             nseResults(iTStep).precision,...
             nseResults(iTStep).recall,...
             nseResults(iTStep).errs_nse,...
             nseResults(iTStep).latestClassifier] = learn_nse_for_attacking(nseResults(iTStep).net,...
                                                                            nseData(iTStep).dataTrain,...
                                                                            nseData(iTStep).labelsTrain,...
                                                                            nseData(iTStep).dataTest,...
                                                                            nseData(iTStep).labelsTest);
            else % Learn++.NSE gets t = t - 1 neseResults
            [nseResults(iTStep).net,...
             nseResults(iTStep).f_measure,...
             nseResults(iTStep).g_mean,...
             nseResults(iTStep).precision,...
             nseResults(iTStep).recall,...
             nseResults(iTStep).errs_nse,...
             nseResults(iTStep).latestClassifier] = learn_nse_for_attacking(nseResults(iTStep-1).net,...
                                                                            nseData(iTStep).dataTrain,...
                                                                            nseData(iTStep).labelsTrain,...
                                                                            nseData(iTStep).dataTest,...
                                                                            nseData(iTStep).labelsTest);
            end
        else % At this point enough time steps have past to start generating attack points based on previous distributions
            atkTimeStep = iTStep - timeStepsInPastToAttack;
            atkTimeStepData = vertcat(nseData(atkTimeStep).dataTrain,nseData(atkTimeStep).dataTest);
            atkTimeStepLabels = vertcat(nseData(atkTimeStep).labelsTrain,nseData(atkTimeStep).labelsTest);
            atkSet.boundary = [min(atkTimeStepData);max(atkTimeStepData)];
            [atkData(iTStep).points,atkData(iTStep).labels] = ...
                                        chrisAttacks(atkTimeStepData,...
                                                     atkTimeStepLabels,...
                                                     atkSet);
            [nseResults(iTStep).net,...
            nseResults(iTStep).f_measure,...
            nseResults(iTStep).g_mean,...
            nseResults(iTStep).precision,...
            nseResults(iTStep).recall,...
            nseResults(iTStep).errs_nse,...
            nseResults(iTStep).latestClassifier] = ...
                                    learn_nse_for_attacking(nseResults(iTStep-1).net,...
                                                           [nseData(iTStep).dataTrain;atkData(iTStep).points],...
                                                           [nseData(iTStep).labelsTrain;atkData(iTStep).labels'],...
                                                           nseData(iTStep).dataTest,...
                                                           nseData(iTStep).labelsTest);
        end
    end
end